services:
  db:
    image: postgres
    restart: always
    container_name: db_chat
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
    env_file:
      - .env
    networks:
      - network-backend
    ports:
      - 5432:5432
    volumes:
      - db-data:/var/lib/postgresql/data
  backend:
    build:
      context: backend
    container_name: django_backend
    command: ./entrypoint.sh
    volumes:
      - ./backend:/chat
    ports:
      - 8000:8000
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
    env_file:
      - .env
    networks:
      - network-backend
    depends_on:
      - db
    tty: true
    stdin_open: true
 
  frontend:
    build:
      context: frontend
    container_name: react_frontend
    volumes:
      - ./frontend:/app
    ports:
      - 3000:3000
    networks:
      - network-frontend
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - NODE_VERSION=${NODE_VERSION}
      - NODE_ENV=${NODE_ENV}
      - VITE_API_DEV=${VITE_API_DEV}
      - VITE_ENVIROMENT=${VITE_ENVIROMENT}
    env_file:
      - .env
    depends_on:
      - backend
    command: ./deploy.sh
    tty: true 
    stdin_open: true
networks:
  network-frontend: {}
  network-backend: {}
volumes:
  db-data:
